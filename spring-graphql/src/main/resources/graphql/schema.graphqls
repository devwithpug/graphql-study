type User {
    id: ID!
    username: String!
    firstName: String!
    lastName: String!
    """
    Is the sum of firstName and lastName
    """
    fullName: String!
    allTweets: [Tweet!]!
}

"""
Tweet object represents a resource for a Tweet
"""
type Tweet {
    id: ID!
    text: String!
    author: User
}

type Query {
    """
    Documenting our schema
    """
    ping: String!
    # GET /api/v1/tweets
    allTweets: [Tweet!]!
    # GET /api/v1/tweet/:id
    tweet(id: ID!): Tweet
    allUsers: [User!]!
}

type Mutation {
    # POST /api/v1/tweets
    postTweet(text: String!, userId: ID!): Tweet!
    # DELETE /api/v1/tweet/:id
    """
    Deletes a Tweet if found, else return false
    """
    deleteTweet(id: ID!): Boolean!
}
